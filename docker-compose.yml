version: "3.2"

services:
  adonis-api:
    image: adonis-api
    container_name: adonis-api
    restart: unless-stopped

    build:
      context: ./LoLPickerAPI
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    networks:
      - app-network
    depends_on:
      - adonis-mysql
    environment:
      - LOL_API_KEY=${LOL_API_KEY}
      - APP_KEY=${APP_KEY}
      - DB_HOST=adonis-mysql 
      - MYSQL_DATABASE=lolpickerdb
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - PORT=8080
      - HOST=0.0.0.0
  adonis-web:
    image: adonis-web
    container_name: adonis-web
    restart: unless-stopped
    build:
      context: ./LoLPickerWeb
      dockerfile: Dockerfile
      args:
        - PORT=3000
    ports:
      - 80:3000
    networks:
      - app-network
    depends_on:
      - adonis-api
      - adonis-mysql
    environment:
      - API_HOST=adonis-api 
      - API_PORT=8080
      - PORT=3000

  adonis-mysql:
    image: mysql:5.7
    restart: always
    container_name: adonis-mysql
    ports:
      - 3306:3306
    networks:
      - app-network
    volumes:
      - /data/lolpickerdb:/var/lib/mysql
    environment:
      - MYSQL_USER=root
      - MYSQL_DATABASE=lolpickerdb
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    command: ['mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci']
networks:
  app-network:
    driver: bridge